Goals of this program:

* Batch analysis of a disk image
* Find and extract files of a given file type.
* Generate metadata for input into other programs.


* Workbench for James - metadata extractor
* Input data for Daniel - datamining info.

Things that our plug-in architecture needs to do:
- run the metadata extractor in another process (in case it crashes)
- query each extractor to fid out what kinds of fields it can produce.
- get the fields from the extractor (how? XML?)
- no need to recompile
- works with java, perl, python, & C plug-ins
- High-speed interconnect for plug-ins in C
- compatability with what was being done for scrave?

Things that would be nice:
- not creating lots of files.


Configuration file:

   <glob>     <channel>  <args>	      

A <glob> is anything that has a "*" or a "?" in it. If the recovered filename matches
the glob, then the channel is run with the args.

Example channels;

	dgi - Domex Gateway Interface. Object provided on stdin. Args provided as environment variables.
	                               Return is each property on a line in name:value format
        so   - Shared Object. Code is loaded into memory and run.
	jvm  - Java.  A Java VM is strated up. Data is passed using jni/shared memory/tcp

   *.jpeg     dgi	/path/to/dgi/exec	#	Domex Gateway Interface
   

